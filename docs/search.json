[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Coronary Artery Bypass Graft (CABG) Complications",
    "section": "",
    "text": "1 Introduction"
  },
  {
    "objectID": "index.html#significance-of-cabg",
    "href": "index.html#significance-of-cabg",
    "title": "Coronary Artery Bypass Graft (CABG) Complications",
    "section": "1.1 Significance of CABG",
    "text": "1.1 Significance of CABG\nCABG (pronounced “cabbage”) is a kind of surgery to reroute blood around a blockage caused by heart disease in the heart through a new artery. Also known as single/double/triple bypass surgery, this procedure is used to alleviate symptoms of heart disease and may prolong life expectancy. It can be elective or emergency based if the patient has suffered a heart attack. 1 While it is not the only procedure or treatment for heart disease, it is the most common type of heart surgery in the United States with over 300,000 patients undergoing the procedure a year. 2 The actual surgery uses a graft, a surgically removed piece of a vein from somewhere else in the body (usually the heart), to bypass the blockage by connecting to the proper arteries and veins that the blocked artery would have used."
  },
  {
    "objectID": "index.html#cabg-complications",
    "href": "index.html#cabg-complications",
    "title": "Coronary Artery Bypass Graft (CABG) Complications",
    "section": "1.2 CABG Complications",
    "text": "1.2 CABG Complications\nAs of 2021, heart disease continues to be the leading cause of death in the United States over cancer and COVID-19. 3 It is essential, therefore, to understand and classify the treatment procedures for the constant improvement and effectivity of surgeries that treat such a lethal disease. As with any procedure, there are risks and complications that can impact the potentially life-saving or life-improving effects of the surgery. Further, for certain patients, the surgery may be elective. Thus, it is even more critical to understand the complications associated with CABG.\nUp to 14% of patients report to the emergency room with post-operative complications. 4 These readmission frequencies to the hospital are helpful metrics to make conclusions about the overall riskiness of a certain surgery as well as the quality of the care the patient originally received during the surgery. As such, an important part of any study of the riskiness of a surgery not only should include complications, but also the readmission statistics for the surgery. With access to recent data, it is necessary to evaluate current trends in readmissions from complications from CABG procedures."
  },
  {
    "objectID": "index.html#research-questions",
    "href": "index.html#research-questions",
    "title": "Coronary Artery Bypass Graft (CABG) Complications",
    "section": "1.3 Research Questions",
    "text": "1.3 Research Questions\nTo briefly discuss our data, we will explore a dataset that reports a subset of complications and readmission counts associated with CABG surgeries in the state of California over the years of 2018-2021. This dataset is one of the only de-identified datasets with age, race, and gender data included with a fairly exhaustive categorization of the various complications as well as information about how many of each demographic did or did not face these complications and subsequent readmission. With the context of the surgery’s significance and this data, we hope to answer the following questions:\n\nDoes our data change over time in terms of frequency of complications, readmissions, and demographics/medical information?\nWhat are the most common complications associated with CABG?\nWhat complications most often lead to readmission to the hospital?\nDoes your demographic data and medical information impact your likelihood to face a complication from a CABG procedure?\nDoes your demographic data and medical information impact your likelihood that you will be readmitted to the hospital regardless of complication?\nDoes your demographic data, medical information, and complication impact your likelihood that you will be readmitted to the hospital?"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Coronary Artery Bypass Graft (CABG) Complications",
    "section": "",
    "text": "Mayo Clinic Article on CABG↩︎\nCedars-Sinai Article on Traditional Heart Surgery↩︎\nCDC Statistics on Leading Causes of Death in the US↩︎\nNIH Paper on Coronary artery bypass graft surgery complications↩︎"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nWe found multiple datasets on the California Health and Human Services Agency’s (CalHHS) Open Data Portal. In particular, to explore cardiovascular health of different demographics, we found a dataset called “Readmissions for Isolated Coronary Artery Bypass Graft (CABG) Complications”. 1\nThe dataset includes the latest publicly available data from the California Coronary Artery Bypass Graft (CABG) Outcomes Reporting Program (CCORP), used for its annual performance reporting requirements. Every six months, hospitals around the state of California submit clinical data through a secure online web application to the Office of Statewide Health Planning and Development (OSHPD). A “Data Contact” person at each hospital acts as a liaison between CCORP and cardiac surgeons. Once the data is finalized and officially submitted to the state, CCORP requires surgeons to review their data and sign a “Surgeon Certification Form.” This certification affirms that surgeons have reviewed their data, ensuring the accuracy and completeness of the cases assigned to them. 2\nThe initial dataset was created two years ago, but was updated as recently as 2 weeks ago. It is unclear how long it will take for more recent years to get added to the dataset.\nThe data is published as a CSV file, which makes importing it a simple task. We can just use R’s built-in read.csv function to import the data after downloading the dataset onto our local computer. We can see that there are 1008 observations (rows) and 7 variables (columns) in the data frame after importing the dataset.\n\n\nCode\nlibrary(knitr)\nlibrary(dplyr)\n\n\n\n\nCode\ncab = read.csv(\"cab.csv\") |&gt; rename(\"Complication\" = complication,\"Category\" = category,\"Readmission\" = readmission, \"Percentage Readmitted\"=Yes)\nstr(cab)\n\n\n'data.frame':   1008 obs. of  7 variables:\n $ Year                 : chr  \"2018-2019\" \"2018-2019\" \"2018-2019\" \"2018-2019\" ...\n $ Complication         : chr  \"Deep Sternal Infection\" \"Deep Sternal Infection\" \"Deep Sternal Infection\" \"Deep Sternal Infection\" ...\n $ Category             : chr  \"Age\" \"Age\" \"Age\" \"All\" ...\n $ Strata               : chr  \"0 to 40\" \"41-65\" \"66 to Max\" \"All\" ...\n $ Readmission          : chr  \"N\" \"N\" \"N\" \"N\" ...\n $ Percentage Readmitted: num  0 0.00109 0.00081 0.00093 0.00169 0.00082 0.00075 0.00122 0.00085 0.00162 ...\n $ Count                : int  0 11 11 22 5 16 1 6 16 1 ...\n\n\nEach row contains the count of a complication, given a certain category and strata within that category, with subsequent readmission counts. This can be seen clearly by printing out the first couple of rows:\n\nCode\nkable(cab[1:6, ], caption = \"Head of our data\")\n\n\n\nHead of our data\n\n\n\n\n\n\n\n\n\n\n\nYear\nComplication\nCategory\nStrata\nReadmission\nPercentage Readmitted\nCount\n\n\n\n\n2018-2019\nDeep Sternal Infection\nAge\n0 to 40\nN\n0.00000\n0\n\n\n2018-2019\nDeep Sternal Infection\nAge\n41-65\nN\n0.00109\n11\n\n\n2018-2019\nDeep Sternal Infection\nAge\n66 to Max\nN\n0.00081\n11\n\n\n2018-2019\nDeep Sternal Infection\nAll\nAll\nN\n0.00093\n22\n\n\n2018-2019\nDeep Sternal Infection\nCABG type\nCABG+Valve\nN\n0.00169\n5\n\n\n2018-2019\nDeep Sternal Infection\nCABG type\nIsolated CABG\nN\n0.00082\n16\n\n\n\n\nOne issue we can see right away is that some strata do not have any counts for complications.\n\nCode\nlibrary(dplyr)\nfiltered = cab |&gt; filter(Count == 0)\nkable(filtered[1:6, ], caption = \"Head of our filtered data with 0 counts\")\n\n\n\nHead of our filtered data with 0 counts\n\n\n\n\n\n\n\n\n\n\n\nYear\nComplication\nCategory\nStrata\nReadmission\nPercentage Readmitted\nCount\n\n\n\n\n2018-2019\nDeep Sternal Infection\nAge\n0 to 40\nN\n0\n0\n\n\n2018-2019\nDeep Sternal Infection\nPayorType\nUninsured\nN\n0\n0\n\n\n2018-2019\nDeep Sternal Infection\nRace\nNative\nN\n0\n0\n\n\n2018-2019\nPost-Operative Dialysis\nPayorType\nUninsured\nN\n0\n0\n\n\n2018-2019\nPost-Operative Dialysis\nRace\nNative\nN\n0\n0\n\n\n2018-2019\nPost-Operative Renal Failure\nPayorType\nUninsured\nN\n0\n0\n\n\n\n\nFrom this selection, we can see that there are certain groups that are either underrepresented or are generally less at risk for heart disease and therefore less in need of the CABG surgical procedure. It makes sense that the youngest age group - “0 to 40” - is less at risk than older age groups but we would still expect perhaps a few rare cases of heart disease. Similarly, we would also expect there to be some cases of heart disease for the Native American group, but it is likely an underrepresented population in this data. 3 Additionally, we can see that patients that are uninsured seem to have fewer instances of heart disease. This seems paradoxical, as uninsured patients are generally more at risk for health issues and worse health outcomes than insured patients. 4 However, it is also known that “uninsured individuals are less likely than those with insurance to receive preventive care and services for major health conditions and chronic diseases”. 5"
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\nWe have mostly nominal categorical data with discrete counts.\nOur first goal is to examine how complications, readmissions, and demographics change over the course of the three years that we have data for. In order to analyze this, we will compare the counts for each categorical variable over each year. Given that we only have three years of data, we expect to see relatively little change over time.\nTo determine the most common complications associated with CABG, we can use the data to identify and visualize the most frequent complications by focusing on the Complication variable. This visualization can be done with a simple bar chart.\nTo address which complications most often lead to readmission to the hospital, we will examine the relationship between complications and readmission. We can create a visual such as a bar chart or an alluvial plot to display this.\nIn order to understand how demographic data impacts the likelihood to face a complication from a CABG procedure, we will use the \\(\\chi^2\\) test. We can also visualize this with a mosaic plot.\nFinally, to investigate how demographic data impacts the likelihood of readmission given any particular complication, we can similarly use a \\(\\chi^2\\) test and mosaic plot."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\nInitially, we can see that there are no missing values in our dataset.\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n    \nmissing_data &lt;- cab %&gt;%\n  mutate_all(~is.na(.)) |&gt; \n  mutate(row_id=row_number()) %&gt;%\n  pivot_longer(-row_id, names_to=\"feature\", values_to=\"values\") \n\n\n\nggplot(missing_data, aes(x = feature, y = row_id, fill = values)) +\n  geom_tile(color = \"white\") +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"green\"),labels = c(\"Missing\", \"Not Missing\"),limits = c(\"TRUE\", \"FALSE\"), guide_legend(title = \"\"))+\n  labs(title = \"Heatmap of Missing Values\", x = \"Feature\", y = \"Row ID\") +\n  theme_minimal()+\n  theme(axis.text.x = element_text(angle = 45,hjust=1))\n\n\n\n\n\n\n\nCode\nis_null &lt;- function(x) {\n  ifelse(is.na(x), TRUE, FALSE)\n}\n\nnew_wide = cab |&gt; mutate(row_id=row_number()) |&gt; pivot_wider(names_from = Category, values_from = Strata)\n\nmissing_wide_data = new_wide |&gt;  \n  mutate_all(~is_null(.)) |&gt; mutate(row_id=row_number()) %&gt;%\n  pivot_longer(-row_id, names_to=\"feature\", values_to=\"values\") |&gt; subset(feature !=\"All\") |&gt; mutate(feature = factor(feature, levels=c(\"Age\", \"CABG type\",\"Gender\",\"PayorType\" , \"Race\", \"Complication\",\"Count\",\"Percentage Readmitted\",\"Readmission\",\"Year\")))\n\n\nggplot(missing_wide_data, aes(x = feature, y = row_id, fill = values)) +\n  geom_tile(color = \"white\") +\n  scale_fill_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"green\"),labels = c(\"Missing\", \"Not Missing\"),limits = c(\"TRUE\", \"FALSE\"), guide_legend(title = \"\"))+\n  labs(title = \"Heatmap of Missing Values after Pivot Wider\", x = \"Feature\", y = \"Row ID\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45,hjust=1))\n\n\n\n\n\nHowever, we can see that the data is formatted in a way that makes it impossible to see the relationship between different variables. This is likely due to de-identification protocols which is a standard practice for HIPAA compliance. HIPAA compliance is important so that publicly available patient data is not traceable back to a specific person. Our data for instance does not have entries that relate specific complications to both Age and Race at the same time. Instead we only have demographic data for each complication, but no overlap in types of demographics which are called Strata in our data. The plot above shows how each entry in our data lacks those relationships. We can see that each row always has an entry for Complication, Count, Percentage Readmitted, Readmission, and Year."
  },
  {
    "objectID": "data.html#footnotes",
    "href": "data.html#footnotes",
    "title": "2  Data",
    "section": "",
    "text": "Link to Data↩︎\nSource and Procedure of Data Collection↩︎\nCDC Report on Heart Disease Prevalence↩︎\nKaiser Report on Uninsured Health Outcomes↩︎\nNIH Paper on Uninsured Access to Healthcare↩︎"
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nlibrary(ggalluvial)\nlibrary(RColorBrewer)\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\nlibrary(ggmosaic)\n\n\n\nAttaching package: 'ggmosaic'\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\n\nCode\noptions(dplyr.summarise.inform = FALSE)\n\ncab = read.csv(\"cab.csv\")\ncab = cab %&gt;% mutate(Strata = factor(Strata)) %&gt;% mutate(Strata = fct_recode(Strata, \"Over 65\" = \"66 to Max\", \"Under 40\" = \"0 to 40\"))\n\n\n\n\nCode\ncab_counts = cab %&gt;% filter(!(Strata %in% c('Under 40', 'Uninsured', 'Native', 'Others', 'Pacific'))) %&gt;% filter(!(complication %in% c('Deep Sternal Infection', 'Reintervention for Myocardial Ischemia'))) %&gt;% arrange(Year, complication)\n\n\n\n4 Question 1: Does our data change over time in terms of frequency of complications, readmissions, and demographics/medical information?\n\n\nCode\ncomplication_counts = cab_counts %&gt;% group_by(Year, complication) %&gt;% summarise(Freq=sum(Count)) %&gt;% arrange(Year, desc(Freq)) %&gt;% mutate(complication=factor(complication, levels = unique(complication)))\nreadmission_counts = cab_counts %&gt;% group_by(Year, readmission) %&gt;% summarise(Freq=sum(Count))\nstrata_counts = cab_counts %&gt;% group_by(Year, category, Strata) %&gt;% summarise(Freq=sum(Count)) %&gt;% subset(category != \"All\") \n\n\n\n\nCode\nggplot(complication_counts, aes(x=Year, y=Freq, fill=complication)) +\n  geom_bar(stat='identity', position='dodge') +\n  scale_fill_brewer(palette=\"Dark2\") +\n  labs(title=\"Counts of Complications over the Years\", y=\"Count\")\n\n\n\n\n\nCode\nggplot(complication_counts, aes(x=Year, y=log10(Freq), fill=complication)) +\n  geom_bar(stat='identity', position='dodge') +\n  scale_fill_brewer(palette=\"Dark2\") +\n  labs(title=\"Log Counts of Complications over the Years\", y=\"Log Count\")\n\n\n\n\n\n\n\nCode\nggplot(readmission_counts, aes(x=Year, y=Freq, fill=readmission)) +\n  geom_bar(stat='identity', position='dodge') +\n  scale_fill_brewer(palette=\"Dark2\") +\n  labs(title=\"Counts of Readmissions over the Years\", y=\"Count\")\n\n\n\n\n\n\n\nCode\nfor (c in unique(strata_counts$category)) {\n  if (c == \"Age\"){\n    print(ggplot(strata_counts %&gt;% subset(category == c), aes(x=Year, y=Freq, fill=Strata)) +\n      geom_bar(stat='identity', position='dodge') +\n      scale_fill_brewer(c, palette=\"Dark2\") +\n      labs(title=paste(paste(\"Counts of\", c), \"over the Years\"), y=\"Count\") +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)))\n  }else{\n    print(ggplot(strata_counts %&gt;% subset(category == c) %&gt;% arrange(Year, desc(Freq)) %&gt;% mutate(Strata = factor(Strata, levels=unique(Strata))), aes(x=Year, y=Freq, fill=Strata)) +\n      geom_bar(stat='identity', position='dodge') +\n      scale_fill_brewer(c, palette=\"Dark2\") +\n      labs(title=paste(paste(\"Counts of\", c), \"over the Years\"), y=\"Count\") +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)))\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5 Question 2: What are the most common complications associated with CABG?\n\n\nCode\nggplot(complication_counts %&gt;% group_by(Year, complication) %&gt;% summarize(Freq=sum(Freq)) %&gt;% mutate(complication=factor(complication)), aes(x=complication, y=Freq, fill=complication)) +\n  geom_bar(stat=\"identity\") +\n  facet_wrap(~ Year, scales = \"free\") +\n  labs(x=\"Complication\", y=\"Count\", title=\"Counts for Complications\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n6 Question 3: What complications most often lead to readmission to the hospital?\n\n\nCode\ndf=cab_counts %&gt;% subset(category==\"All\")\n\ndf$Year &lt;- as.factor(df$Year)\n\n# Plotting a grouped bar chart\nggplot(df, aes(x = complication, y = Yes, fill = readmission)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ Year, scales = \"free\") +\n  labs(x = \"Complication\", y = \"Count\", fill = \"Readmission\") +\n  ggtitle(\"Complication Readmission Rates\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n7 Question 4: Does your demographic data and medical information impact your likelihood to face a complication from a CABG procedure?\n\n\nCode\nage_counts = cab_counts %&gt;% subset(category == \"Age\") %&gt;% group_by(complication, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Age = Strata) %&gt;% mutate(Age=factor(Age)) %&gt;% uncount(weights = Freq)\ncabg_counts = cab_counts %&gt;% subset(category == \"CABG type\") %&gt;% group_by(complication, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, CABG.Type = Strata) %&gt;% mutate(CABG.Type=factor(CABG.Type)) %&gt;% uncount(weights = Freq)\ngender_counts = cab_counts %&gt;% subset(category == \"Gender\") %&gt;% group_by(complication, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Gender = Strata) %&gt;% mutate(Gender=factor(Gender)) %&gt;% uncount(weights = Freq)\npay_counts = cab_counts %&gt;% subset(category == \"PayorType\") %&gt;% group_by(complication, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Payment.Type = Strata) %&gt;% mutate(Payment.Type=factor(Payment.Type)) %&gt;% uncount(weights = Freq)\nrace_counts = cab_counts %&gt;% subset(category == \"Race\") %&gt;% group_by(complication, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Race = Strata) %&gt;% mutate(Race=factor(Race)) %&gt;% uncount(weights = Freq)\n\n\n\n\nCode\nggplot(age_counts) +\n  geom_mosaic(aes(x=product(Age), fill = Complication)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\nWarning: `unite_()` was deprecated in tidyr 1.2.0.\nℹ Please use `unite()` instead.\nℹ The deprecated feature was likely used in the ggmosaic package.\n  Please report the issue at &lt;https://github.com/haleyjeppson/ggmosaic&gt;.\n\n\n\n\n\n\n\nCode\nggplot(cabg_counts) +\n  geom_mosaic(aes(x=product(CABG.Type), fill = Complication)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\nCode\nggplot(gender_counts) +\n  geom_mosaic(aes(x=product(Gender), fill = Complication)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\nCode\nggplot(pay_counts) +\n  geom_mosaic(aes(x=product(Payment.Type), fill = Complication)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\nCode\nggplot(race_counts) +\n  geom_mosaic(aes(x=product(Race), fill = Complication)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\n8 Question 5: Does your demographic data and medical information impact your likelihood that you will be readmitted to the hospital regardless of complication?\n\n\nCode\nage_read_counts = cab_counts %&gt;% subset(category == \"Age\") %&gt;% group_by(readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Readmission = readmission, Age = Strata) %&gt;% mutate(Age=factor(Age)) %&gt;% uncount(weights = Freq)\ncabg_read_counts = cab_counts %&gt;% subset(category == \"CABG type\") %&gt;% group_by(readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Readmission = readmission, CABG.Type = Strata) %&gt;% mutate(CABG.Type=factor(CABG.Type)) %&gt;% uncount(weights = Freq)\ngender_read_counts = cab_counts %&gt;% subset(category == \"Gender\") %&gt;% group_by(readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Readmission = readmission, Gender = Strata) %&gt;% mutate(Gender=factor(Gender)) %&gt;% uncount(weights = Freq)\npay_read_counts = cab_counts %&gt;% subset(category == \"PayorType\") %&gt;% group_by(readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Readmission = readmission, PayorType = Strata) %&gt;% mutate(PayorType=factor(PayorType)) %&gt;% uncount(weights = Freq)\nrace_read_counts = cab_counts %&gt;% subset(category == \"Race\") %&gt;% group_by(readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Readmission = readmission, Race = Strata) %&gt;% mutate(Race=factor(Race)) %&gt;% uncount(weights = Freq)\n\nggplot(age_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Age), fill = Readmission)) +\n  labs(title = \"Mosaic Plots of CABG Type and Readmission\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Age -----\\n\")\n\n\n----- Age -----\n\n\nCode\ntest = chisq.test(table(age_read_counts$Readmission, age_read_counts$Age))\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\n\n\nChi Squared Statistic: 3.6179 \n\n\nCode\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\n\n\np-value: 0.0572 \n\n\nCode\ncat(paste(\"-----------------\", \"\\n\"))\n\n\n----------------- \n\n\nCode\nggplot(cabg_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, CABG.Type), fill = Readmission)) +\n  labs(title = \"Mosaic Plots of CABG Type and Readmission\") +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- CABG Type -----\\n\")\n\n\n----- CABG Type -----\n\n\nCode\ntest = chisq.test(table(cabg_read_counts$Readmission, cabg_read_counts$CABG.Type))\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\n\n\nChi Squared Statistic: 117.2364 \n\n\nCode\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\n\n\np-value: 0 \n\n\nCode\ncat(paste(\"-----------------\", \"\\n\"))\n\n\n----------------- \n\n\nCode\nggplot(gender_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Gender), fill = Readmission)) +\n  labs(title = \"Mosaic Plots of Gender and Readmission\") +\n  theme(aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Gender -----\\n\")\n\n\n----- Gender -----\n\n\nCode\ntest = chisq.test(table(gender_read_counts$Readmission, gender_read_counts$Gender))\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\n\n\nChi Squared Statistic: 205.467 \n\n\nCode\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\n\n\np-value: 0 \n\n\nCode\ncat(paste(\"-----------------\", \"\\n\"))\n\n\n----------------- \n\n\nCode\nggplot(pay_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, PayorType), fill = Readmission)) +\n  labs(title = \"Mosaic Plots of Insurance Type and Readmission\") +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Insurance Type -----\\n\")\n\n\n----- Insurance Type -----\n\n\nCode\ntest = chisq.test(table(pay_read_counts$Readmission, pay_read_counts$PayorType))\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\n\n\nChi Squared Statistic: 10997.5074 \n\n\nCode\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\n\n\np-value: 0 \n\n\nCode\ncat(paste(\"-----------------\", \"\\n\"))\n\n\n----------------- \n\n\nCode\nggplot(race_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Race), fill = Readmission)) +\n  labs(title = \"Mosaic Plots of Race and Readmission\") +\n  theme(axis.text.x = element_text(angle = 45), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Race -----\\n\")\n\n\n----- Race -----\n\n\nCode\ntest = chisq.test(table(race_read_counts$Readmission, race_read_counts$Race))\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\n\n\nChi Squared Statistic: 78.0327 \n\n\nCode\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\n\n\np-value: 0 \n\n\nCode\ncat(paste(\"-----------------\", \"\\n\"))\n\n\n----------------- \n\n\n\n\n9 Question 6: Does your demographic data, medical information, and complication impact your likelihood that you will be readmitted to the hospital?\n\n\nCode\nage_comp_read_counts = cab_counts %&gt;% subset(category == \"Age\") %&gt;% group_by(complication, readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Readmission = readmission, Age = Strata) %&gt;% mutate(Age=factor(Age)) %&gt;% uncount(weights = Freq)\ncabg_comp_read_counts = cab_counts %&gt;% subset(category == \"CABG type\") %&gt;% group_by(complication, readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Readmission = readmission, CABG.Type = Strata) %&gt;% mutate(CABG.Type=factor(CABG.Type)) %&gt;% uncount(weights = Freq)\ngender_comp_read_counts = cab_counts %&gt;% subset(category == \"Gender\") %&gt;% group_by(complication, readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Readmission = readmission, Gender = Strata) %&gt;% mutate(Gender=factor(Gender)) %&gt;% uncount(weights = Freq)\npay_comp_read_counts = cab_counts %&gt;% subset(category == \"PayorType\") %&gt;% group_by(complication, readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Readmission = readmission, PayorType = Strata) %&gt;% mutate(PayorType=factor(PayorType)) %&gt;% uncount(weights = Freq)\nrace_comp_read_counts = cab_counts %&gt;% subset(category == \"Race\") %&gt;% group_by(complication, readmission, Strata) %&gt;% summarize(Freq = sum(Count)) %&gt;% rename(Complication = complication, Readmission = readmission, Race = Strata) %&gt;% mutate(Race=factor(Race)) %&gt;% uncount(weights = Freq)\n\nggplot(age_comp_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Age), fill = Readmission)) +\n  facet_wrap(~Complication) +\n  labs(title = \"Mosaic Plots of Age and Readmission for Each Complication\") +\n  theme(aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Age -----\\n\")\n\n\n----- Age -----\n\n\nCode\nfor (complication in unique(age_comp_read_counts$Complication)){\ncat(paste(complication, \"\\n\"))\ntest = chisq.test(table(age_comp_read_counts$Readmission, age_comp_read_counts$Age, age_comp_read_counts$Complication)[, , complication])\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\ncat(paste(\"-----------------\", \"\\n\"))\n}\n\n\nPost-Operative Atrial Fibrillation \nChi Squared Statistic: 13.5689 \np-value: 2e-04 \n----------------- \nPost-Operative Dialysis \nChi Squared Statistic: 5.7033 \np-value: 0.0169 \n----------------- \nPost-Operative Renal Failure \nChi Squared Statistic: 0.0023 \np-value: 0.9615 \n----------------- \nPost-Operative Stroke \nChi Squared Statistic: 0.002 \np-value: 0.964 \n----------------- \nProlonged Ventilation \nChi Squared Statistic: 0.0036 \np-value: 0.9522 \n----------------- \nRe-Operative for Bleed \nChi Squared Statistic: 3.1566 \np-value: 0.0756 \n----------------- \n\n\nCode\nggplot(cabg_comp_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, CABG.Type), fill = Readmission)) +\n  facet_wrap(~Complication) +\n  labs(title = \"Mosaic Plots of CABG Type and Readmission for Each Complication\") +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- CABG Type -----\\n\")\n\n\n----- CABG Type -----\n\n\nCode\nfor (complication in unique(cabg_comp_read_counts$Complication)){\ncat(paste(complication, \"\\n\"))\ntest = chisq.test(table(cabg_comp_read_counts$Readmission, cabg_comp_read_counts$CABG.Type, cabg_comp_read_counts$Complication)[, , complication])\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\ncat(paste(\"-----------------\", \"\\n\"))\n}\n\n\nPost-Operative Atrial Fibrillation \nChi Squared Statistic: 57.5318 \np-value: 0 \n----------------- \nPost-Operative Dialysis \nChi Squared Statistic: 1.3322 \np-value: 0.5137 \n----------------- \nPost-Operative Renal Failure \nChi Squared Statistic: 4.3848 \np-value: 0.1116 \n----------------- \nPost-Operative Stroke \nChi Squared Statistic: 2.4665 \np-value: 0.2913 \n----------------- \nProlonged Ventilation \nChi Squared Statistic: 14.2171 \np-value: 8e-04 \n----------------- \nRe-Operative for Bleed \nChi Squared Statistic: 9.7124 \np-value: 0.0078 \n----------------- \n\n\nCode\nggplot(gender_comp_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Gender), fill = Readmission)) +\n  facet_wrap(~Complication) +\n  labs(title = \"Mosaic Plots of Gender and Readmission for Each Complication\") +\n  theme(aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Gender -----\\n\")\n\n\n----- Gender -----\n\n\nCode\nfor (complication in unique(gender_comp_read_counts$Complication)){\ncat(paste(complication, \"\\n\"))\ntest = chisq.test(table(gender_comp_read_counts$Readmission, gender_comp_read_counts$Gender, gender_comp_read_counts$Complication)[, , complication])\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\ncat(paste(\"-----------------\", \"\\n\"))\n}\n\n\nPost-Operative Atrial Fibrillation \nChi Squared Statistic: 117.0435 \np-value: 0 \n----------------- \nPost-Operative Dialysis \nChi Squared Statistic: 4.794 \np-value: 0.0286 \n----------------- \nPost-Operative Renal Failure \nChi Squared Statistic: 8.76 \np-value: 0.0031 \n----------------- \nPost-Operative Stroke \nChi Squared Statistic: 2.8418 \np-value: 0.0918 \n----------------- \nProlonged Ventilation \nChi Squared Statistic: 20.6166 \np-value: 0 \n----------------- \nRe-Operative for Bleed \nChi Squared Statistic: 7.0267 \np-value: 0.008 \n----------------- \n\n\nCode\nggplot(pay_comp_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, PayorType), fill = Readmission)) +\n  facet_wrap(~Complication) +\n  labs(title = \"Mosaic Plots of Insurance Type and Readmission for Each Complication\") +\n  theme(axis.text.x = element_text(angle = 45, hjust=1), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Insurance Type -----\\n\")\n\n\n----- Insurance Type -----\n\n\nCode\nfor (complication in unique(pay_comp_read_counts$Complication)){\ncat(paste(complication, \"\\n\"))\ntest = chisq.test(table(pay_comp_read_counts$Readmission, pay_comp_read_counts$PayorType, pay_comp_read_counts$Complication)[, , complication])\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\ncat(paste(\"-----------------\", \"\\n\"))\n}\n\n\nPost-Operative Atrial Fibrillation \nChi Squared Statistic: 7444.8242 \np-value: 0 \n----------------- \nPost-Operative Dialysis \nChi Squared Statistic: 312.9139 \np-value: 0 \n----------------- \nPost-Operative Renal Failure \nChi Squared Statistic: 510.6406 \np-value: 0 \n----------------- \nPost-Operative Stroke \nChi Squared Statistic: 325.0059 \np-value: 0 \n----------------- \nProlonged Ventilation \nChi Squared Statistic: 1789.4062 \np-value: 0 \n----------------- \nRe-Operative for Bleed \nChi Squared Statistic: 529.2087 \np-value: 0 \n----------------- \n\n\nCode\nggplot(race_comp_read_counts) +\n  geom_mosaic(aes(x=product(Readmission, Race), fill = Readmission)) +\n  facet_wrap(~Complication) +\n  labs(title = \"Mosaic Plots of Race and Readmission for Each Complication\") +\n  theme(axis.text.x = element_text(angle = 45), aspect.ratio = 1, axis.ticks.x=element_blank(), line = element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\nCode\ncat(\"----- Race -----\\n\")\n\n\n----- Race -----\n\n\nCode\nfor (complication in unique(race_comp_read_counts$Complication)){\ncat(paste(complication, \"\\n\"))\ntest = chisq.test(table(race_comp_read_counts$Readmission, race_comp_read_counts$Race, race_comp_read_counts$Complication)[, , complication])\ncat(paste(paste(\"Chi Squared Statistic:\", round(test$statistic, 4))), \"\\n\")\ncat(paste(paste(\"p-value:\", round(test$p.value, 4))), \"\\n\")\ncat(paste(\"-----------------\", \"\\n\"))\n}\n\n\nPost-Operative Atrial Fibrillation \nChi Squared Statistic: 25.2347 \np-value: 0 \n----------------- \nPost-Operative Dialysis \nChi Squared Statistic: 9.9607 \np-value: 0.0189 \n----------------- \nPost-Operative Renal Failure \nChi Squared Statistic: 11.1967 \np-value: 0.0107 \n----------------- \nPost-Operative Stroke \nChi Squared Statistic: 7.7891 \np-value: 0.0506 \n----------------- \nProlonged Ventilation \nChi Squared Statistic: 5.0378 \np-value: 0.1691 \n----------------- \nRe-Operative for Bleed \nChi Squared Statistic: 3.7467 \np-value: 0.2901 \n-----------------"
  }
]